from aiogram import Router
from aiogram.types import InlineQuery, InlineQueryResultArticle, InputTextMessageContent
from aiogram.utils.text_decorations import html_decoration as hd
from uuid import uuid4

from bot.utils.caesar import caesar_cipher

router = Router()

@router.inline_query()
async def inline_mode(inline_query: InlineQuery):
    query = inline_query.query.strip()

    if not query:
        return await inline_query.answer(
            results=[],
            switch_pm_text="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∏ —Å–¥–≤–∏–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–ü—Ä–∏–≤–µ—Ç 3'",
            switch_pm_parameter="help"
        )

    parts = query.rsplit(' ', 1)
    if len(parts) < 2:
        return await inline_query.answer(
            results=[],
            switch_pm_text="–§–æ—Ä–º–∞—Ç: <—Ç–µ–∫—Å—Ç> <—Å–¥–≤–∏–≥>",
            switch_pm_parameter="help"
        )

    text, shift_str = parts[0], parts[1]

    try:
        shift = int(shift_str)
    except ValueError:
        return await inline_query.answer(
            results=[],
            switch_pm_text="–°–¥–≤–∏–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º",
            switch_pm_parameter="help"
        )

    # –®–∏—Ñ—Ä—É–µ–º
    encrypted = caesar_cipher(text, shift, 'encrypt')
    # –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
    decrypted = caesar_cipher(encrypted, shift, 'decrypt')

    results = [
        InlineQueryResultArticle(
            id=str(uuid4()),
            title="üîê –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å",
            description=f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {encrypted[:30]}...",
            input_message_content=InputTextMessageContent(
                message_text=f"üîê *–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ* (—Å–¥–≤–∏–≥ {shift}):\n`{encrypted}`",
                parse_mode="Markdown"
            )
        ),
        InlineQueryResultArticle(
            id=str(uuid4()),
            title="üîì –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å (–æ–±—Ä–∞—Ç–Ω–æ)",
            description=f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {decrypted[:30]}...",
            input_message_content=InputTextMessageContent(
                message_text=f"üîì *–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ* (—Å–¥–≤–∏–≥ {shift}):\n`{decrypted}`",
                parse_mode="Markdown"
            )
        )
    ]

    await inline_query.answer(results, cache_time=10, is_personal=True)
